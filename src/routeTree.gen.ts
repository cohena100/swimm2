/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as IndexImport } from './routes/index'
import { Route as UsersUserIdPostsImport } from './routes/users/$userId/posts'
import { Route as UsersUserIdAlbumsImport } from './routes/users/$userId/albums'
import { Route as UsersUserIdPostsPostIdCommentsImport } from './routes/users/$userId/posts_/$postId/comments'
import { Route as UsersUserIdAlbumsAlbumIdPhotosImport } from './routes/users/$userId/albums_/$albumId/photos'

// Create Virtual Routes

const WorkLazyImport = createFileRoute('/work')()
const BlogLazyImport = createFileRoute('/blog')()
const AccountLazyImport = createFileRoute('/account')()
const AboutLazyImport = createFileRoute('/about')()

// Create/Update Routes

const WorkLazyRoute = WorkLazyImport.update({
  path: '/work',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/work.lazy').then((d) => d.Route))

const BlogLazyRoute = BlogLazyImport.update({
  path: '/blog',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/blog.lazy').then((d) => d.Route))

const AccountLazyRoute = AccountLazyImport.update({
  path: '/account',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/account.lazy').then((d) => d.Route))

const AboutLazyRoute = AboutLazyImport.update({
  path: '/about',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/about.lazy').then((d) => d.Route))

const IndexRoute = IndexImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const UsersUserIdPostsRoute = UsersUserIdPostsImport.update({
  path: '/users/$userId/posts',
  getParentRoute: () => rootRoute,
} as any)

const UsersUserIdAlbumsRoute = UsersUserIdAlbumsImport.update({
  path: '/users/$userId/albums',
  getParentRoute: () => rootRoute,
} as any)

const UsersUserIdPostsPostIdCommentsRoute =
  UsersUserIdPostsPostIdCommentsImport.update({
    path: '/users/$userId/posts/$postId/comments',
    getParentRoute: () => rootRoute,
  } as any)

const UsersUserIdAlbumsAlbumIdPhotosRoute =
  UsersUserIdAlbumsAlbumIdPhotosImport.update({
    path: '/users/$userId/albums/$albumId/photos',
    getParentRoute: () => rootRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutLazyImport
      parentRoute: typeof rootRoute
    }
    '/account': {
      id: '/account'
      path: '/account'
      fullPath: '/account'
      preLoaderRoute: typeof AccountLazyImport
      parentRoute: typeof rootRoute
    }
    '/blog': {
      id: '/blog'
      path: '/blog'
      fullPath: '/blog'
      preLoaderRoute: typeof BlogLazyImport
      parentRoute: typeof rootRoute
    }
    '/work': {
      id: '/work'
      path: '/work'
      fullPath: '/work'
      preLoaderRoute: typeof WorkLazyImport
      parentRoute: typeof rootRoute
    }
    '/users/$userId/albums': {
      id: '/users/$userId/albums'
      path: '/users/$userId/albums'
      fullPath: '/users/$userId/albums'
      preLoaderRoute: typeof UsersUserIdAlbumsImport
      parentRoute: typeof rootRoute
    }
    '/users/$userId/posts': {
      id: '/users/$userId/posts'
      path: '/users/$userId/posts'
      fullPath: '/users/$userId/posts'
      preLoaderRoute: typeof UsersUserIdPostsImport
      parentRoute: typeof rootRoute
    }
    '/users/$userId/albums/$albumId/photos': {
      id: '/users/$userId/albums/$albumId/photos'
      path: '/users/$userId/albums/$albumId/photos'
      fullPath: '/users/$userId/albums/$albumId/photos'
      preLoaderRoute: typeof UsersUserIdAlbumsAlbumIdPhotosImport
      parentRoute: typeof rootRoute
    }
    '/users/$userId/posts/$postId/comments': {
      id: '/users/$userId/posts/$postId/comments'
      path: '/users/$userId/posts/$postId/comments'
      fullPath: '/users/$userId/posts/$postId/comments'
      preLoaderRoute: typeof UsersUserIdPostsPostIdCommentsImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren({
  IndexRoute,
  AboutLazyRoute,
  AccountLazyRoute,
  BlogLazyRoute,
  WorkLazyRoute,
  UsersUserIdAlbumsRoute,
  UsersUserIdPostsRoute,
  UsersUserIdAlbumsAlbumIdPhotosRoute,
  UsersUserIdPostsPostIdCommentsRoute,
})

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/about",
        "/account",
        "/blog",
        "/work",
        "/users/$userId/albums",
        "/users/$userId/posts",
        "/users/$userId/albums/$albumId/photos",
        "/users/$userId/posts/$postId/comments"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/about": {
      "filePath": "about.lazy.tsx"
    },
    "/account": {
      "filePath": "account.lazy.tsx"
    },
    "/blog": {
      "filePath": "blog.lazy.tsx"
    },
    "/work": {
      "filePath": "work.lazy.tsx"
    },
    "/users/$userId/albums": {
      "filePath": "users/$userId/albums.tsx"
    },
    "/users/$userId/posts": {
      "filePath": "users/$userId/posts.tsx"
    },
    "/users/$userId/albums/$albumId/photos": {
      "filePath": "users/$userId/albums_/$albumId/photos.tsx"
    },
    "/users/$userId/posts/$postId/comments": {
      "filePath": "users/$userId/posts_/$postId/comments.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
